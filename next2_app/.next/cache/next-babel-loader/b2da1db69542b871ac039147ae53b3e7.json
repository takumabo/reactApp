{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/boutakuma/Desktop/next2_app/components/AddressShow.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nvar AddressShow = /*#__PURE__*/function (_Component) {\n  _inherits(AddressShow, _Component);\n\n  var _super = _createSuper(AddressShow);\n\n  function AddressShow(props) {\n    var _this;\n\n    _classCallCheck(this, AddressShow);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12px\",\n      padding: \"5px 10px\"\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/address');\n    }\n\n    _this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.doChange = _this.doChange.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } //login logout処理\n\n\n  _createClass(AddressShow, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined');\n    }\n  }, {\n    key: \"logputed\",\n    value: function logputed() {\n      Router.push('/adress');\n    } //アドレスデータの検索\n\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(email) {\n      var db = firebase.database();\n      var ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n      ref0.set(false);\n      var ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n      var self = this;\n      ref.orderByKey().equalTo(Lib.encodeEmail(email)).on('value', function (snapshot) {\n        for (var i in snapshot.val()) {\n          var d = Lib.deepcopy(snapshot.val()[i]);\n          self.setState({\n            address: d\n          });\n          break;\n        }\n      });\n    } //フィールド入力\n\n  }, {\n    key: \"doChange\",\n    value: function doChange(e) {\n      this.setState({\n        input: e.target.value\n      });\n    } //メッセージ送信処理\n\n  }, {\n    key: \"doAction\",\n    value: function doAction() {\n      var from = Lib.encodeEmail(this.props.email);\n      var to = Lib.encodeEmail(this.state.email);\n      var db = firebase.database();\n      var d = new Date().getTime();\n      var ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n      ref.set('to:' + this.state.input);\n      var ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n      ref2.set('form:' + this.state.input);\n      var ref3 = db.ref('address/' + to + '/' + from + '/check/');\n      ref3.set(true);\n      this.setState({\n        input: ''\n      });\n    } //レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.address == null) {\n        this.getAddress(Router.query.email);\n      }\n\n      var items = [];\n\n      if (this.state.address != null) {\n        for (var n in this.state.address.messages) {\n          items.unshift(__jsx(\"li\", {\n            key: n,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 31\n            }\n          }, this.state.address.messages[n]));\n        }\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, __jsx(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }, this.state.message), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }), this.state.address != null ? __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, \"NAME\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }\n      }, this.state.address.name)), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }\n      }, \"E-MAIL\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, this.state.email)), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }\n      }, \"TEL\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }\n      }, this.state.address.tel)), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }\n      }, \"MEMO\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, this.state.address.memo)))) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, \"no-address\"), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }), __jsx(\"fieldset\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \"Message:\"), __jsx(\"input\", {\n        type: \"text\",\n        size: \"40\",\n        value: this.state.input,\n        onChange: this.doChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }), __jsx(\"button\", {\n        onClick: this.doAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, \"send\")), this.state.address != null && this.state.address.messages != null ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), __jsx(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, items)) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }\n      }, \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"));\n    }\n  }]);\n\n  return AddressShow;\n}(Component);\n\nAddressShow = connect(function (state) {\n  return state;\n})(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["/Users/boutakuma/Desktop/next2_app/components/AddressShow.js"],"names":["React","Component","connect","firebase","Lib","Account","Router","AddressShow","props","fontSize","padding","login","push","state","last","input","email","query","address","message","logined","bind","doChange","doAction","console","log","db","database","ref0","ref","encodeEmail","set","self","orderByKey","equalTo","on","snapshot","i","val","d","deepcopy","setState","e","target","value","from","to","Date","getTime","ref2","ref3","getAddress","items","n","messages","unshift","logouted","name","tel","memo"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nimport Router from 'next/router';\n\nclass AddressShow extends Component{\n    style= {\n        fontSize: \"12px\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n\n        if(this.props.login == false){\n            Router.push('/address');\n        }\n\n        this.state = {\n            last: -1,\n            input: '',\n            email: Router.query.email,\n            address: null,\n            message: Router.query.email + 'のデータ'\n        }\n        this.logined = this.logined.bind(this);\n        this.doChange = this.doChange.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    //login logout処理\n    logined(){\n        console.log('logined');\n    }\n\n    logputed(){\n        Router.push('/adress');\n    }\n\n    //アドレスデータの検索\n    getAddress(email){\n        let db = firebase.database();\n        let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n        ref0.set(false);\n        let ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n        let self = this;\n        ref.orderByKey()\n        .equalTo(Lib.encodeEmail(email))\n        .on('value', (snapshot)=>{\n            for(let i in snapshot.val()){\n                let d = Lib.deepcopy(snapshot.val()[i]);\n                self.setState({\n                    address: d\n                });\n                break;\n            }  \n        });\n    }\n\n    //フィールド入力\n    doChange(e){\n        this.setState({\n            input: e.target.value\n        });\n    }\n\n    //メッセージ送信処理\n    doAction(){\n        let from = Lib.encodeEmail(this.props.email);\n        let to = Lib.encodeEmail(this.state.email);\n        let db = firebase.database();\n        let d = new Date().getTime();\n\n        let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n        ref.set('to:' + this.state.input);\n        let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n        ref2.set('form:' + this.state.input);\n        let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n        ref3.set(true);\n        this.setState({input:''})\n    }\n\n    //レンダリング\n    render(){\n        if(this.state.address == null){\n            this.getAddress(Router.query.email);\n        }\n\n        let items = [];\n        if(this.state.address != null){\n            for(let n in this.state.address.messages){\n                items.unshift(<li key={n}>\n                    {this.state.address.messages[n]}\n                </li>);\n            }\n        }\n\n        return (\n            <div>\n                <Account onLogined={this.logined} onLogouted={this.logouted} />\n            <p>{this.state.message}</p>\n            <hr />\n            {this.state.address != null\n            ?\n            <table>\n                <tbody>\n                    <tr>\n                        <th>NAME</th>\n                        <td>{this.state.address.name}</td>\n                    </tr>\n                    <tr>\n                        <th>E-MAIL</th>\n                        <td>{this.state.email}</td>\n                    </tr>\n                    <tr>\n                        <th>TEL</th>\n                        <td>{this.state.address.tel}</td>\n                    </tr>\n                    <tr>\n                        <th>MEMO</th>\n                        <td>{this.state.address.memo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            :\n            <p>no-address</p>\n            }\n            <hr />\n            <fieldset>\n                <p>Message:</p>\n                <input type=\"text\" size=\"40\" value={this.state.input} onChange={this.doChange} />\n                <button onClick={this.doAction}>send</button>\n            </fieldset>\n            {this.state.address != null && this.state.address.messages != null\n            ?\n            <div>\n                <p>※{this.state.address.name}さんとのメッセージ</p>\n                <ul>{items}</ul>\n            </div>\n            :\n            <p>※メッセージはありません。</p>\n            }\n            </div>\n        );\n    }\n}\n\nAddressShow = connect((state)=>state)(AddressShow);\nexport default AddressShow;"]},"metadata":{},"sourceType":"module"}