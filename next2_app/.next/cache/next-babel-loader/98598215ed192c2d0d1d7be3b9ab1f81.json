{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/boutakuma/Desktop/next2_app/components/AddressAdd.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nvar AddressAdd = /*#__PURE__*/function (_Component) {\n  _inherits(AddressAdd, _Component);\n\n  var _super = _createSuper(AddressAdd);\n\n  function AddressAdd(props) {\n    var _this;\n\n    _classCallCheck(this, AddressAdd);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12px\",\n      padding: \"5px 10px\"\n    });\n\n    if (_this.props.login == false) {\n      Router.push('/address');\n    }\n\n    _this.state = {\n      name: '',\n      email: '',\n      tel: '',\n      memo: '',\n      message: 'データを入力してください。'\n    };\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    _this.onChangeName = _this.onChangeName.bind(_assertThisInitialized(_this));\n    _this.onChangeEmail = _this.onChangeEmail.bind(_assertThisInitialized(_this));\n    _this.onChangeTel = _this.onChangeTel.bind(_assertThisInitialized(_this));\n    _this.onChangeMemo = _this.onChangeMemo.bind(_assertThisInitialized(_this));\n    _this.doAction = _this.doAction.bind(_assertThisInitialized(_this));\n    return _this;\n  } //login logout処理\n\n\n  _createClass(AddressAdd, [{\n    key: \"logined\",\n    value: function logined() {\n      console.log('logined.');\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/address');\n    } //フィールド入力処理\n\n  }, {\n    key: \"onChangeName\",\n    value: function onChangeName(e) {\n      this.setState({\n        name: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeEmail\",\n    value: function onChangeEmail(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeTel\",\n    value: function onChangeTel(e) {\n      this.setState({\n        tel: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeMemo\",\n    value: function onChangeMemo(e) {\n      this.setState({\n        memo: e.target.value\n      });\n    } //データの登録処理\n\n  }, {\n    key: \"doAction\",\n    value: function doAction(e) {\n      var key = this.state.email;\n      var data = {\n        name: this.state.name,\n        tel: this.state.tel,\n        memo: this.state.memo\n      };\n      var db = firebase.database();\n      var ref = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(this.state.email));\n      console.log(ref);\n      ref.set(data);\n      this.setState({\n        name: '',\n        email: '',\n        tel: '',\n        memo: '',\n        message: '登録しました！'\n      });\n    } //レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      }, __jsx(Account, {\n        self: this,\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, this.state.message), this.props.login ? __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, \"name:\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        size: \"30\",\n        value: this.state.name,\n        onChange: this.onChangeName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }\n      }, \"email:\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        size: \"30\",\n        value: this.state.email,\n        onChange: this.onChangeEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 33\n        }\n      }))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, \"tel:\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        size: \"30\",\n        value: this.state.tel,\n        onChange: this.onChangeTel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      }, \"memo:\"), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        size: \"30\",\n        value: this.state.memo,\n        onChange: this.onChangeMemo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }))), __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 29\n        }\n      }), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }, __jsx(\"button\", {\n        onClick: this.doAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, \"Add\"))))) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }\n      }, \"Please login...\"));\n    }\n  }]);\n\n  return AddressAdd;\n}(Component);\n\nAddressAdd = connect(function (state) {\n  return state;\n})(AddressAdd);\nexport default AddressAdd;","map":{"version":3,"sources":["/Users/boutakuma/Desktop/next2_app/components/AddressAdd.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","AddressAdd","props","fontSize","padding","login","push","state","name","email","tel","memo","message","logined","bind","onChangeName","onChangeEmail","onChangeTel","onChangeMemo","doAction","console","log","e","setState","target","value","key","data","db","database","ref","encodeEmail","set","logouted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass AddressAdd extends Component {\n    style={\n        fontSize: \"12px\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        if(this.props.login == false){\n            Router.push('/address');\n        }\n\n        this.state = {\n            name: '',\n            email: '',\n            tel: '',\n            memo: '',\n            message: 'データを入力してください。'\n        }\n\n        this.logined = this.logined.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeTel = this.onChangeTel.bind(this);\n        this.onChangeMemo = this.onChangeMemo.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    //login logout処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    //フィールド入力処理\n    onChangeName(e){\n        this.setState({name: e.target.value});\n    }\n\n    onChangeEmail(e){\n        this.setState({email: e.target.value});\n    }\n\n    onChangeTel(e){\n        this.setState({tel: e.target.value});\n    }\n\n    onChangeMemo(e){\n        this.setState({memo: e.target.value});\n    }\n\n    //データの登録処理\n    doAction(e){\n        let key = this.state.email;\n        let data = {\n            name: this.state.name,\n            tel: this.state.tel,\n            memo: this.state.memo\n        }\n\n        let db = firebase.database();\n        let ref = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(this.state.email));\n        console.log(ref);\n        ref.set(data);\n        this.setState({\n            name: '',\n            email: '',\n            tel: '',\n            memo: '',\n            message: '登録しました！',\n        })\n    }\n\n    //レンダリング\n    render(){\n        return(\n            <div>\n                <Account self={this} onLogined={this.logined} onLogouted={this.logouted} />\n                <hr />\n                <p>{this.state.message}</p>\n                {this.props.login\n                ?\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>name:</th>\n                            <td><input type=\"text\" size=\"30\" value={this.state.name} onChange={this.onChangeName} /></td>\n                        </tr>\n                        <tr>\n                            <th>email:</th>\n                            <td><input type=\"text\" size=\"30\" value={this.state.email} onChange={this.onChangeEmail} /></td>\n                        </tr>\n                        <tr>\n                            <th>tel:</th>\n                            <td><input type=\"text\" size=\"30\" value={this.state.tel} onChange={this.onChangeTel} /></td>\n                        </tr>\n                        <tr>\n                            <th>memo:</th>\n                            <td><input type=\"text\" size=\"30\" value={this.state.memo} onChange={this.onChangeMemo} /></td>\n                        </tr>\n                        <tr>\n                            <th></th>\n                            <td><button onClick={this.doAction}>Add</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n                :\n                <p>Please login...</p> \n                }\n            </div>\n        );\n    }\n}\n\nAddressAdd = connect((state)=>state)(AddressAdd);\nexport default AddressAdd;\n"]},"metadata":{},"sourceType":"module"}