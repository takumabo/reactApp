{"ast":null,"code":"var _jsxFileName = \"/Users/boutakuma/Desktop/next2_app/components/Address.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12px\",\n      padding: \"5px 10px\"\n    });\n\n    this.logined = this.logined.bind(this);\n  } //login logout 処理\n\n\n  logined() {\n    this.getFireData();\n  }\n\n  logouted() {\n    Router.push('/address');\n  } //firebaseからデータ取得\n\n\n  getFireData() {\n    if (this.props.email == undefined || this.props.email == '') {\n      return;\n    }\n\n    let db = firebase.database();\n    let email = Lib.encodeEmail(this.props.email);\n    let ref = db.ref('address/');\n    let self = this;\n    ref.orderByKey().equalTo(email).on('value', snapshot => {\n      let d = Lib.deepcopy(snapshot.val());\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: this.props.login,\n          username: this.props.username,\n          email: this.props.email,\n          data: d,\n          items: self.getItem(d)\n        }\n      });\n    });\n  } //dataを元に表示項目を作成\n\n\n  getItem(data) {\n    if (data == undefined) {\n      return;\n    }\n\n    let res = [];\n\n    for (let i in data) {\n      for (let j in data[i]) {\n        let email = Lib.decodeEmail(j);\n        let s = [i][j]['name'];\n        res.push(__jsx(\"li\", {\n          key: j,\n          \"data-tag\": email,\n          onClick: this.go.bind(null, email),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 26\n          }\n        }, data[i][j]['check'] == true ? __jsx(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 52\n          }\n        }, \"\\u2714\\uFE0E\") : '', s, \"(\", email, \")\"));\n      }\n\n      break;\n    }\n\n    return res;\n  } //データ表示ページの移動\n\n\n  go(email) {\n    Router.push('/address_show?email=' + email);\n  } //レンダリング\n\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, this.props.items == [] ? __jsx(\"li\", {\n      key: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"no item\") : this.props.items));\n  }\n\n}\n\nAddress = connect(state => state)(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/boutakuma/Desktop/next2_app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Address","constructor","props","fontSize","padding","logined","bind","getFireData","logouted","push","email","undefined","db","database","encodeEmail","ref","self","orderByKey","equalTo","on","snapshot","d","deepcopy","val","dispatch","type","value","login","username","data","items","getItem","res","i","j","decodeEmail","s","go","render","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n    style= {\n        fontSize: \"12px\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    //login logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    //firebaseからデータ取得\n    getFireData(){\n        if(this.props.email == undefined || this.props.email == ''){\n            return;\n        }\n        let db = firebase.database();\n        let email = Lib.encodeEmail(this.props.email);\n        let ref = db.ref('address/');\n        let self = this;\n        ref.orderByKey()\n        .equalTo(email)\n        .on('value',(snapshot)=>{\n            let d = Lib.deepcopy(snapshot.val());\n\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value:{\n                    login: this.props.login,\n                    username: this.props.username,\n                    email: this.props.email,\n                    data: d,\n                    items: self.getItem(d)\n                }\n            });\n        });\n    }\n\n    //dataを元に表示項目を作成\n    getItem(data){\n        if(data == undefined){return;}\n        let res = [];\n        for(let i in data){\n            for(let j in data[i]){\n                let email = Lib.decodeEmail(j);\n                let s = [i][j]['name'];\n\n                res.push(<li key={j} data-tag={email} onClick={this.go.bind(null,email)}>\n                    {data[i][j]['check'] == true ? <b>✔︎</b>: ''}{s}({email})\n                </li>);\n            }\n            break;\n        }\n        return res;\n    }\n\n    //データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    //レンダリング\n    render(){\n        return(\n            <div>\n                <Account onLogined={this.logined} onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items == []\n                    ?\n                    <li key=\"0\">no item</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state)=>state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}