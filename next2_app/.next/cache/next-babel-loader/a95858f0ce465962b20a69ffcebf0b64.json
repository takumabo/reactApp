{"ast":null,"code":"var _jsxFileName = \"/Users/boutakuma/Desktop/next2_app/components/Account.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\n\nclass Account extends Component {\n  constructor(props) {\n    super(props); //this.login_check();\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12px\",\n      padding: \"5px 10px\"\n    });\n\n    this.login_check = this.login_check.bind(this);\n  } //login処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email,\n          data: this.props.data,\n          items: this.props.items\n        }\n      });\n      this.props.onLogined();\n    });\n  } //logout処理\n\n\n  logout() {\n    console.log(\"logout\");\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        username: '(click here!)',\n        email: '',\n        data: [],\n        items: []\n      }\n    });\n    this.props.onLogouted();\n  } //login logpoutの✔︎\n\n\n  login_check() {\n    if (this.props.login == false) {\n      this.login();\n    } else {\n      this.logout();\n    }\n  } //レンダリング\n\n\n  render() {\n    return __jsx(\"p\", {\n      className: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      className: \"account\",\n      onClick: this.login_check,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"LOGINED:\", this.props.username));\n  }\n\n}\n\nAccount = connect(state => state)(Account);\nexport default Account;","map":{"version":3,"sources":["/Users/boutakuma/Desktop/next2_app/components/Account.js"],"names":["React","Component","connect","firebase","Account","constructor","props","fontSize","padding","login_check","bind","login","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","data","items","onLogined","logout","console","log","signOut","onLogouted","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAM5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN,EADc,CAEd;;AAFc,mCALV;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKU;;AAGd,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACH,GAV2B,CAY5B;;;AACAC,EAAAA,KAAK,GAAE;AACH,QAAIC,QAAQ,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAZ,IAAAA,QAAQ,CAACU,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACCK,IADD,CACOC,MAAD,IAAU;AACZ,WAAKZ,KAAL,CAAWa,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,aADU;AAEhBC,QAAAA,KAAK,EAAC;AACFV,UAAAA,KAAK,EAAE,IADL;AAEFW,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFpB;AAGFC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE,KAHjB;AAIFC,UAAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWoB,IAJf;AAKFC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWqB;AALhB;AAFU,OAApB;AAUA,WAAKrB,KAAL,CAAWsB,SAAX;AACH,KAbD;AAcH,GA9B2B,CAgC5B;;;AACAC,EAAAA,MAAM,GAAE;AACJC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA5B,IAAAA,QAAQ,CAACU,IAAT,GAAgBmB,OAAhB;AACA,SAAK1B,KAAL,CAAWa,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE,aADU;AAEhBC,MAAAA,KAAK,EAAE;AACHV,QAAAA,KAAK,EAAE,KADJ;AAEHW,QAAAA,QAAQ,EAAC,eAFN;AAGHG,QAAAA,KAAK,EAAC,EAHH;AAIHC,QAAAA,IAAI,EAAC,EAJF;AAKHC,QAAAA,KAAK,EAAC;AALH;AAFS,KAApB;AAUA,SAAKrB,KAAL,CAAW2B,UAAX;AACH,GA/C2B,CAiD5B;;;AACAxB,EAAAA,WAAW,GAAE;AACT,QAAG,KAAKH,KAAL,CAAWK,KAAX,IAAoB,KAAvB,EAA6B;AACzB,WAAKA,KAAL;AACH,KAFD,MAEK;AACD,WAAKkB,MAAL;AACH;AACJ,GAxD2B,CA0D5B;;;AACAK,EAAAA,MAAM,GAAE;AACJ,WACI;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,KAAKzB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,KAAKH,KAAL,CAAWgB,QADxB,CADJ,CADJ;AAOH;;AAnE2B;;AAsEhClB,OAAO,GAAGF,OAAO,CAAEiC,KAAD,IAASA,KAAV,CAAP,CAAwB/B,OAAxB,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from 'firebase';\n\nclass Account extends Component {\n    style = {\n        fontSize: \"12px\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        //this.login_check();\n        this.login_check = this.login_check.bind(this);\n    }\n\n    //login処理\n    login(){\n        let provider = new firebase.auth.GoogleAuthProvider();\n        var self = this;\n        firebase.auth().signInWithPopup(provider)\n        .then((result)=>{\n            this.props.dispatch({\n                type: 'UPDATE_USER',\n                value:{\n                    login: true,\n                    username: result.user.displayName,\n                    email: result.user.email,\n                    data: this.props.data,\n                    items: this.props.items\n                }\n            });\n            this.props.onLogined();\n        });\n    }\n\n    //logout処理\n    logout(){\n        console.log(\"logout\");\n        firebase.auth().signOut();\n        this.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n                login: false,\n                username:'(click here!)',\n                email:'',\n                data:[],\n                items:[]\n            }\n        });\n        this.props.onLogouted();\n    }\n\n    //login logpoutの✔︎\n    login_check(){\n        if(this.props.login == false){\n            this.login();\n        }else{\n            this.logout();\n        }\n    }\n\n    //レンダリング\n    render(){\n        return (\n            <p className=\"login\">\n                <span className=\"account\" onClick={this.login_check}>\n                    LOGINED:{this.props.username}\n                </span>\n            </p>\n        );\n    }\n}\n\nAccount = connect((state)=>state)(Account);\nexport default Account;"]},"metadata":{},"sourceType":"module"}