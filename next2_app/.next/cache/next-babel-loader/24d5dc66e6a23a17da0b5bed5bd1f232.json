{"ast":null,"code":"var _jsxFileName = \"/Users/boutakuma/Desktop/next2_app/components/AddressShow.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12px\",\n      padding: \"5px 10px\"\n    });\n\n    if (this.props.login == false) {\n      Router.push('/address');\n    }\n\n    this.state = {\n      last: -1,\n      input: '',\n      email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } //login logout処理\n\n\n  logined() {\n    console.log('logined');\n  }\n\n  logputed() {\n    Router.push('/adress');\n  } //アドレスデータの検索\n\n\n  getAddress(email) {\n    let db = firebase.database();\n    let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n    ref0.set(false);\n    let ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n    let self = this;\n    ref.orderByKey().equalTo(Lib.encodeEmail(email)).on('value', snapshot => {\n      for (let i in snapshot.val()) {\n        let d = Lib.deepcopy(snapshot.val()[i]);\n        self.setState({\n          address: d\n        });\n        break;\n      }\n    });\n  } //フィールド入力\n\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  } //メッセージ送信処理\n\n\n  doAction() {\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.database();\n    let d = new Date().getTime();\n    let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n    ref.set('to:' + this.state.input);\n    let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n    ref2.set('form:' + this.state.input);\n    let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n    ref3.set(true);\n    this.setState({\n      input: ''\n    });\n  } //レンダリング\n\n\n  render() {\n    if (this.state.address == null) {\n      this.getAddress(Router.query.email);\n    }\n\n    let items = [];\n\n    if (this.state.address != null) {\n      for (let n in this.state.address.messages) {\n        items.unshift(__jsx(\"li\", {\n          key: n,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 31\n          }\n        }, this.state.address.messages[n]));\n      }\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, this.state.message), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }), this.state.address != null ? __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"NAME\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, this.state.address.name)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, \"E-MAIL\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    }, this.state.email)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"TEL\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, this.state.address.tel)), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"MEMO\"), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, this.state.address.memo)))) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"no-address\"), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), __jsx(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, \"Message:\"), __jsx(\"input\", {\n      type: \"text\",\n      size: \"40\",\n      value: this.state.input,\n      onChange: this.doChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), __jsx(\"button\", {\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, \"send\")), this.state.address != null && this.state.address.messages != null ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, \"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, items)) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"));\n  }\n\n}\n\nAddressShow = connect(state => state)(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["/Users/boutakuma/Desktop/next2_app/components/AddressShow.js"],"names":["React","Component","connect","firebase","Lib","Account","Router","AddressShow","constructor","props","fontSize","padding","login","push","state","last","input","email","query","address","message","logined","bind","doChange","doAction","console","log","logputed","getAddress","db","database","ref0","ref","encodeEmail","set","self","orderByKey","equalTo","on","snapshot","i","val","d","deepcopy","setState","e","target","value","from","to","Date","getTime","ref2","ref3","render","items","n","messages","unshift","logouted","name","tel","memo"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from 'firebase';\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nimport Router from 'next/router';\n\nclass AddressShow extends Component{\n    style= {\n        fontSize: \"12px\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n\n        if(this.props.login == false){\n            Router.push('/address');\n        }\n\n        this.state = {\n            last: -1,\n            input: '',\n            email: Router.query.email,\n            address: null,\n            message: Router.query.email + 'のデータ'\n        }\n        this.logined = this.logined.bind(this);\n        this.doChange = this.doChange.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    //login logout処理\n    logined(){\n        console.log('logined');\n    }\n\n    logputed(){\n        Router.push('/adress');\n    }\n\n    //アドレスデータの検索\n    getAddress(email){\n        let db = firebase.database();\n        let ref0 = db.ref('address/' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(email) + '/check');\n        ref0.set(false);\n        let ref = db.ref('address/' + Lib.encodeEmail(this.props.email));\n        let self = this;\n        ref.orderByKey()\n        .equalTo(Lib.encodeEmail(email))\n        .on('value', (snapshot)=>{\n            for(let i in snapshot.val()){\n                let d = Lib.deepcopy(snapshot.val()[i]);\n                self.setState({\n                    address: d\n                });\n                break;\n            }  \n        });\n    }\n\n    //フィールド入力\n    doChange(e){\n        this.setState({\n            input: e.target.value\n        });\n    }\n\n    //メッセージ送信処理\n    doAction(){\n        let from = Lib.encodeEmail(this.props.email);\n        let to = Lib.encodeEmail(this.state.email);\n        let db = firebase.database();\n        let d = new Date().getTime();\n\n        let ref = db.ref('address/' + from + '/' + to + '/messages/' + d);\n        ref.set('to:' + this.state.input);\n        let ref2 = db.ref('address/' + to + '/' + from + '/messages/' + d);\n        ref2.set('form:' + this.state.input);\n        let ref3 = db.ref('address/' + to + '/' + from + '/check/');\n        ref3.set(true);\n        this.setState({input:''})\n    }\n\n    //レンダリング\n    render(){\n        if(this.state.address == null){\n            this.getAddress(Router.query.email);\n        }\n\n        let items = [];\n        if(this.state.address != null){\n            for(let n in this.state.address.messages){\n                items.unshift(<li key={n}>\n                    {this.state.address.messages[n]}\n                </li>);\n            }\n        }\n\n        return (\n            <div>\n                <Account onLogined={this.logined} onLogouted={this.logouted} />\n            <p>{this.state.message}</p>\n            <hr />\n            {this.state.address != null\n            ?\n            <table>\n                <tbody>\n                    <tr>\n                        <th>NAME</th>\n                        <td>{this.state.address.name}</td>\n                    </tr>\n                    <tr>\n                        <th>E-MAIL</th>\n                        <td>{this.state.email}</td>\n                    </tr>\n                    <tr>\n                        <th>TEL</th>\n                        <td>{this.state.address.tel}</td>\n                    </tr>\n                    <tr>\n                        <th>MEMO</th>\n                        <td>{this.state.address.memo}</td>\n                    </tr>\n                </tbody>\n            </table>\n            :\n            <p>no-address</p>\n            }\n            <hr />\n            <fieldset>\n                <p>Message:</p>\n                <input type=\"text\" size=\"40\" value={this.state.input} onChange={this.doChange} />\n                <button onClick={this.doAction}>send</button>\n            </fieldset>\n            {this.state.address != null && this.state.address.messages != null\n            ?\n            <div>\n                <p>※{this.state.address.name}さんとのメッセージ</p>\n                <ul>{items}</ul>\n            </div>\n            :\n            <p>※メッセージはありません。</p>\n            }\n            </div>\n        );\n    }\n}\n\nAddressShow = connect((state)=>state)(AddressShow);\nexport default AddressShow;"]},"metadata":{},"sourceType":"module"}